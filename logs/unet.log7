True
device: cuda
{'weight': 'unet', 'one_hot': True, 'lr': 0.01, 'batch_size': 256, 'epochs': 100, 'channels': [16, 32, 64], 'drop_out': 0}
Encoder_v2(
  (model): Sequential(
    (0): Conv1d(4, 16, kernel_size=(31,), stride=(1,), padding=(15,))
    (1): ResnetBlock(
      (norm1): GroupNorm(16, 16, eps=1e-06, affine=True)
      (conv1): Conv1d(16, 32, kernel_size=(9,), stride=(1,), padding=(4,))
      (norm2): GroupNorm(16, 32, eps=1e-06, affine=True)
      (dropout): Dropout(p=0, inplace=False)
      (conv2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
      (nin_shortcut): Conv1d(16, 32, kernel_size=(1,), stride=(1,))
    )
    (2): ResnetBlock(
      (norm1): GroupNorm(16, 32, eps=1e-06, affine=True)
      (conv1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 32, eps=1e-06, affine=True)
      (dropout): Dropout(p=0, inplace=False)
      (conv2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (3): ResnetBlock(
      (norm1): GroupNorm(16, 32, eps=1e-06, affine=True)
      (conv1): Conv1d(32, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 64, eps=1e-06, affine=True)
      (dropout): Dropout(p=0, inplace=False)
      (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (nin_shortcut): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
    )
    (4): ResnetBlock(
      (norm1): GroupNorm(16, 64, eps=1e-06, affine=True)
      (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 64, eps=1e-06, affine=True)
      (dropout): Dropout(p=0, inplace=False)
      (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (5): ResnetBlock(
      (norm1): GroupNorm(16, 64, eps=1e-06, affine=True)
      (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 64, eps=1e-06, affine=True)
      (dropout): Dropout(p=0, inplace=False)
      (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (6): ResnetBlock(
      (norm1): GroupNorm(16, 64, eps=1e-06, affine=True)
      (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 64, eps=1e-06, affine=True)
      (dropout): Dropout(p=0, inplace=False)
      (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (7): GroupNorm(16, 64, eps=1e-06, affine=True)
    (8): Swish()
    (9): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (final): Linear(in_features=128000, out_features=36, bias=True)
)
x: torch.Size([256, 4, 1000])
y: torch.Size([256, 36])

------- Start Training --------
Traceback (most recent call last):
  File "/home/wenduoc/mambaforge/envs/geneorca/lib/python3.8/multiprocessing/queues.py", line 245, in _feed
    send_bytes(obj)
  File "/home/wenduoc/mambaforge/envs/geneorca/lib/python3.8/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/wenduoc/mambaforge/envs/geneorca/lib/python3.8/multiprocessing/connection.py", line 411, in _send_bytes
    self._send(header + buf)
  File "/home/wenduoc/mambaforge/envs/geneorca/lib/python3.8/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
[train full 0 0.010000 ] time elapsed: 18.2818 	train loss: 0.8451 	val loss: 0.8606 	val score: 0.3730 	best val score: 0.3730
[train full 1 0.010000 ] time elapsed: 19.7326 	train loss: 0.7720 	val loss: 0.8420 	val score: 0.3897 	best val score: 0.3730
[train full 2 0.010000 ] time elapsed: 17.5780 	train loss: 0.7029 	val loss: 0.9021 	val score: 0.4068 	best val score: 0.3730
[train full 3 0.010000 ] time elapsed: 18.0416 	train loss: 0.6343 	val loss: 0.9190 	val score: 0.4120 	best val score: 0.3730
[train full 4 0.010000 ] time elapsed: 19.6430 	train loss: 0.5722 	val loss: 0.9695 	val score: 0.4179 	best val score: 0.3730
[train full 5 0.010000 ] time elapsed: 16.6662 	train loss: 0.5113 	val loss: 1.0472 	val score: 0.4194 	best val score: 0.3730
[train full 6 0.010000 ] time elapsed: 16.1400 	train loss: 0.4509 	val loss: 1.1401 	val score: 0.4296 	best val score: 0.3730
[train full 7 0.010000 ] time elapsed: 16.5746 	train loss: 0.3810 	val loss: 1.2925 	val score: 0.4363 	best val score: 0.3730
[train full 8 0.010000 ] time elapsed: 17.8228 	train loss: 0.3259 	val loss: 1.3134 	val score: 0.4284 	best val score: 0.3730
[train full 9 0.010000 ] time elapsed: 16.1611 	train loss: 0.3108 	val loss: 1.5312 	val score: 0.4445 	best val score: 0.3730
[train full 10 0.010000 ] time elapsed: 16.7318 	train loss: 0.2403 	val loss: 1.6869 	val score: 0.4433 	best val score: 0.3730
Traceback (most recent call last):
  File "pretrain_embedder.py", line 491, in <module>
    train_loss = train_one_epoch(model, optimizer, scheduler, train_loader, loss, n_train)
  File "pretrain_embedder.py", line 470, in train_one_epoch
    train_loss += l.item()
KeyboardInterrupt
