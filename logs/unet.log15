True
device: cuda
{'weight': 'unet', 'one_hot': False, 'lr': 0.0005, 'optimizer': 'Adam', 'weight_decay': 1e-05, 'batch_size': 32, 'epochs': 100, 'channels': [16, 32, 64], 'drop_out': 0.2}
Encoder_v2(
  (model): Sequential(
    (0): Conv1d(4, 16, kernel_size=(31,), stride=(1,), padding=(15,))
    (1): ResnetBlock(
      (norm1): GroupNorm(16, 16, eps=1e-06, affine=True)
      (conv1): Conv1d(16, 32, kernel_size=(9,), stride=(1,), padding=(4,))
      (norm2): GroupNorm(16, 32, eps=1e-06, affine=True)
      (dropout): Dropout(p=0.2, inplace=False)
      (conv2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
      (nin_shortcut): Conv1d(16, 32, kernel_size=(1,), stride=(1,))
    )
    (2): ResnetBlock(
      (norm1): GroupNorm(16, 32, eps=1e-06, affine=True)
      (conv1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 32, eps=1e-06, affine=True)
      (dropout): Dropout(p=0.2, inplace=False)
      (conv2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (3): ResnetBlock(
      (norm1): GroupNorm(16, 32, eps=1e-06, affine=True)
      (conv1): Conv1d(32, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 64, eps=1e-06, affine=True)
      (dropout): Dropout(p=0.2, inplace=False)
      (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (nin_shortcut): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
    )
    (4): ResnetBlock(
      (norm1): GroupNorm(16, 64, eps=1e-06, affine=True)
      (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 64, eps=1e-06, affine=True)
      (dropout): Dropout(p=0.2, inplace=False)
      (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (5): ResnetBlock(
      (norm1): GroupNorm(16, 64, eps=1e-06, affine=True)
      (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 64, eps=1e-06, affine=True)
      (dropout): Dropout(p=0.2, inplace=False)
      (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (6): ResnetBlock(
      (norm1): GroupNorm(16, 64, eps=1e-06, affine=True)
      (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 64, eps=1e-06, affine=True)
      (dropout): Dropout(p=0.2, inplace=False)
      (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (7): GroupNorm(16, 64, eps=1e-06, affine=True)
    (8): Swish()
    (9): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (final): Linear(in_features=128000, out_features=36, bias=True)
)
