True
device: cuda
{'weight': 'unet', 'one_hot': True, 'lr': 0.001, 'optimizer': 'Adam', 'weight_decay': 1e-05, 'batch_size': 256, 'epochs': 100, 'channels': [16, 32, 64], 'drop_out': 0.2}
Encoder_v2(
  (model): Sequential(
    (0): Conv1d(4, 16, kernel_size=(31,), stride=(1,), padding=(15,))
    (1): ResnetBlock(
      (norm1): GroupNorm(16, 16, eps=1e-06, affine=True)
      (conv1): Conv1d(16, 32, kernel_size=(9,), stride=(1,), padding=(4,))
      (norm2): GroupNorm(16, 32, eps=1e-06, affine=True)
      (dropout): Dropout(p=0.2, inplace=False)
      (conv2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
      (nin_shortcut): Conv1d(16, 32, kernel_size=(1,), stride=(1,))
    )
    (2): ResnetBlock(
      (norm1): GroupNorm(16, 32, eps=1e-06, affine=True)
      (conv1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 32, eps=1e-06, affine=True)
      (dropout): Dropout(p=0.2, inplace=False)
      (conv2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (3): ResnetBlock(
      (norm1): GroupNorm(16, 32, eps=1e-06, affine=True)
      (conv1): Conv1d(32, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 64, eps=1e-06, affine=True)
      (dropout): Dropout(p=0.2, inplace=False)
      (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (nin_shortcut): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
    )
    (4): ResnetBlock(
      (norm1): GroupNorm(16, 64, eps=1e-06, affine=True)
      (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 64, eps=1e-06, affine=True)
      (dropout): Dropout(p=0.2, inplace=False)
      (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (5): ResnetBlock(
      (norm1): GroupNorm(16, 64, eps=1e-06, affine=True)
      (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 64, eps=1e-06, affine=True)
      (dropout): Dropout(p=0.2, inplace=False)
      (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (6): ResnetBlock(
      (norm1): GroupNorm(16, 64, eps=1e-06, affine=True)
      (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm2): GroupNorm(16, 64, eps=1e-06, affine=True)
      (dropout): Dropout(p=0.2, inplace=False)
      (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    )
    (7): GroupNorm(16, 64, eps=1e-06, affine=True)
    (8): Swish()
    (9): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (final): Linear(in_features=128000, out_features=36, bias=True)
)
x: torch.Size([256, 4, 1000])
y: torch.Size([256, 36])

------- Start Training --------
Traceback (most recent call last):
  File "/home/wenduoc/mambaforge/envs/geneorca/lib/python3.8/multiprocessing/queues.py", line 245, in _feed
    send_bytes(obj)
  File "/home/wenduoc/mambaforge/envs/geneorca/lib/python3.8/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/wenduoc/mambaforge/envs/geneorca/lib/python3.8/multiprocessing/connection.py", line 411, in _send_bytes
    self._send(header + buf)
  File "/home/wenduoc/mambaforge/envs/geneorca/lib/python3.8/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
[train full 0 0.001000 ] time elapsed: 27.0440 	train loss: 0.9586 	val loss: 0.8368 	val score: 0.3830 	best val score: 0.3830
[train full 1 0.001000 ] time elapsed: 16.8863 	train loss: 0.8255 	val loss: 0.8251 	val score: 0.3706 	best val score: 0.3706
[train full 2 0.001000 ] time elapsed: 16.9113 	train loss: 0.7992 	val loss: 0.8329 	val score: 0.3770 	best val score: 0.3706
[train full 3 0.001000 ] time elapsed: 17.6316 	train loss: 0.7712 	val loss: 0.8818 	val score: 0.3820 	best val score: 0.3706
[train full 4 0.001000 ] time elapsed: 18.8571 	train loss: 0.7371 	val loss: 0.8679 	val score: 0.3928 	best val score: 0.3706
[train full 5 0.001000 ] time elapsed: 19.2632 	train loss: 0.7017 	val loss: 0.8903 	val score: 0.3958 	best val score: 0.3706
[train full 6 0.001000 ] time elapsed: 17.6106 	train loss: 0.6629 	val loss: 0.9175 	val score: 0.4100 	best val score: 0.3706
[train full 7 0.001000 ] time elapsed: 17.3423 	train loss: 0.6228 	val loss: 0.9671 	val score: 0.4068 	best val score: 0.3706
[train full 8 0.001000 ] time elapsed: 16.9484 	train loss: 0.5845 	val loss: 0.9942 	val score: 0.4096 	best val score: 0.3706
[train full 9 0.001000 ] time elapsed: 16.9548 	train loss: 0.5453 	val loss: 1.0907 	val score: 0.4210 	best val score: 0.3706
[train full 10 0.001000 ] time elapsed: 16.9510 	train loss: 0.5061 	val loss: 1.1473 	val score: 0.4189 	best val score: 0.3706
[train full 11 0.001000 ] time elapsed: 17.3948 	train loss: 0.4705 	val loss: 1.1824 	val score: 0.4172 	best val score: 0.3706
Traceback (most recent call last):
  File "pretrain_embedder.py", line 496, in <module>
    train_loss = train_one_epoch(model, optimizer, scheduler, train_loader, loss, n_train)
  File "pretrain_embedder.py", line 475, in train_one_epoch
    train_loss += l.item()
KeyboardInterrupt
